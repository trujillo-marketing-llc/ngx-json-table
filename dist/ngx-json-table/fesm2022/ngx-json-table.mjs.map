{"version":3,"file":"ngx-json-table.mjs","sources":["../../../projects/ngx-json-table/src/lib/lib/settings.ts","../../../projects/ngx-json-table/src/lib/lib/helpers.ts","../../../projects/ngx-json-table/src/lib/lib/json-tree-node.ts","../../../projects/ngx-json-table/src/lib/pipes/sanitize-html.pipe.ts","../../../projects/ngx-json-table/src/lib/components/tbody/key/key.component.ts","../../../projects/ngx-json-table/src/lib/components/tbody/key/key.component.html","../../../projects/ngx-json-table/src/lib/components/tbody/value/value.component.ts","../../../projects/ngx-json-table/src/lib/components/tbody/value/value.component.html","../../../projects/ngx-json-table/src/lib/components/tbody/trow/trow.component.ts","../../../projects/ngx-json-table/src/lib/components/tbody/trow/trow.component.html","../../../projects/ngx-json-table/src/lib/components/tbody/tbody.component.ts","../../../projects/ngx-json-table/src/lib/components/tbody/tbody.component.html","../../../projects/ngx-json-table/src/lib/components/thead/thead.component.ts","../../../projects/ngx-json-table/src/lib/components/thead/thead.component.html","../../../projects/ngx-json-table/src/lib/ngx-json-table.component.ts","../../../projects/ngx-json-table/src/lib/ngx-json-table.component.html","../../../projects/ngx-json-table/src/lib/ngx-json-table.module.ts","../../../projects/ngx-json-table/src/ngx-json-table.ts"],"sourcesContent":["export type Settings = {\n  key?: {\n    headerText?: string;\n    width?: string;\n  };\n  value?: {\n    headerText?: string;\n    width?: string;\n  };\n  options?: {\n    add?: boolean,\n    edit?: {\n      key?: boolean,\n      value?: boolean\n    },\n    delete?: boolean\n  };\n  sortable?: boolean;\n  sortDirection?: SortType;\n  expandAll?: boolean;\n  loadFromFile?: boolean;\n  iconPackage?: 'basic' | 'font-awesome' | 'material-design';\n  icons?: Icons;\n};\n\nexport type Icons = {\n  notSorted?: Icon;\n  sortedAsc?: Icon;\n  sortedDesc?: Icon;\n  expand?: Icon;\n  collapse?: Icon;\n  simpleChild?: Icon;\n  addChild?: Icon;\n  editChild?: Icon;\n  confirmEditChild?: Icon;\n  cancelEditChild?: Icon;\n  deleteChild?: Icon;\n  uploadFile?: Icon;\n};\n\nexport type Icon = {\n  innerText?: string;\n  class?: string;\n  color?: string;\n  html?: string;\n};\n\nexport type SortType = 'asc' | 'desc';\n\nexport type IconsPackages = { [name: string]: Icons };\n\nexport const iconsPackages: IconsPackages = {\n  basic: {\n    notSorted: {html: '<span class=\"ngx-json-table-icon\">&#8693;</span>'},\n    sortedAsc: {html: '<span class=\"ngx-json-table-icon\">&#10515;</span>'},\n    sortedDesc: {html: '<span class=\"ngx-json-table-icon\">&#10514;</span>'},\n    expand: {html: '<span class=\"ngx-json-table-icon\">&#8853;</span>'},\n    collapse: {html: '<span class=\"ngx-json-table-icon\">&#8854;</span>'},\n    simpleChild: {html: '<span class=\"ngx-json-table-icon\">&#62;</span>'},\n    addChild: {html: '<span class=\"ngx-json-table-icon\" style=\"color: green; cursor: pointer\">&#8853;</span>'},\n    editChild: {html: '<span class=\"ngx-json-table-icon\" style=\"color: orange; cursor: pointer\">&#10000;</span>'},\n    confirmEditChild: {html: '<span class=\"ngx-json-table-icon\" style=\"color: green; cursor: pointer\">&#10162;</span>'},\n    cancelEditChild: {html: '<span class=\"ngx-json-table-icon\" style=\"color: indianred; cursor: pointer\">&#8855;</span>'},\n    deleteChild: {html: '<span class=\"ngx-json-table-icon\" style=\"color: indianred; cursor: pointer\">&#8861;</span>'},\n    uploadFile: {html: `<span class=\"ngx-json-table-icon\" style=\"cursor: pointer;\"><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"file-upload\" class=\"svg-inline--fa fa-file-upload fa-w-12\" role=\"img\" viewBox=\"0 0 384 512\"><path fill=\"currentColor\" d=\"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm65.18 216.01H224v80c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-80H94.82c-14.28 0-21.41-17.29-11.27-27.36l96.42-95.7c6.65-6.61 17.39-6.61 24.04 0l96.42 95.7c10.15 10.07 3.03 27.36-11.25 27.36zM377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z\"/></svg></span>`},\n  },\n  'font-awesome': {\n    notSorted: {class: 'fa fa-sort'},\n    sortedAsc: {class: 'fa fa-sort-amount-asc'},\n    sortedDesc: {class: 'fa fa-sort-amount-desc'},\n    expand: {class: 'fa fa-plus-circle'},\n    collapse: {class: 'fa fa-minus-circle'},\n    simpleChild: {class: 'fa fa-angle-right'},\n    addChild: {\n      class: 'fa fa-plus-circle',\n      color: 'green'\n    },\n    editChild: {\n      class: 'fa fa-pencil',\n      color: 'orange'\n    },\n    confirmEditChild: {\n      class: 'fa fa-check-circle',\n      color: 'green'\n    },\n    cancelEditChild: {\n      class: 'fa fa-times-circle',\n      color: 'indianred'\n    },\n    deleteChild: {\n      class: 'fa fa-minus-circle',\n      color: 'indianred'\n    },\n    uploadFile: {class: 'fa fa-upload'}\n  },\n  'material-design': {\n    notSorted: {\n      class: 'material-icons',\n      innerText: 'swap_vert'\n    },\n    sortedAsc: {\n      class: 'material-icons',\n      innerText: 'trending_up'\n    },\n    sortedDesc: {\n      class: 'material-icons',\n      innerText: 'trending_down'\n    },\n    expand: {\n      class: 'material-icons',\n      innerText: 'control_point'\n    },\n    collapse: {\n      class: 'material-icons',\n      innerText: 'remove_circle_outline'\n    },\n    simpleChild: {\n      class: 'material-icons',\n      innerText: 'keyboard_arrow_right'\n    },\n    addChild: {\n      class: 'material-icons',\n      innerText: 'add_circle',\n      color: 'green'\n    },\n    editChild: {\n      class: 'material-icons',\n      innerText: 'create',\n      color: 'orange'\n    },\n    confirmEditChild: {\n      class: 'material-icons',\n      innerText: 'check_circle',\n      color: 'green'\n    },\n    cancelEditChild: {\n      class: 'material-icons',\n      innerText: 'cancel',\n      color: 'indianred'\n    },\n    deleteChild: {\n      class: 'material-icons',\n      innerText: 'remove_circle',\n      color: 'indianred'\n    },\n    uploadFile: {\n      class: 'material-icons',\n      innerText: 'backup',\n    }\n  },\n};\n","import { cloneDeep } from 'lodash';\n\n/**\n * Extending object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\n// tslint:disable-next-line:only-arrow-functions\nexport const deepExtend = function (...objects: Array<any>): any {\n  if (arguments.length < 1 || typeof arguments[0] !== 'object') {\n    return false;\n  }\n\n  if (arguments.length < 2) {\n    return arguments[0];\n  }\n\n  const target = arguments[0];\n\n  // convert arguments to array and cut off target object\n  const args = Array.prototype.slice.call(arguments, 1);\n\n  let val;\n  let src;\n\n  args.forEach((obj: any) => {\n    // skip argument if it is array or isn't object\n    if (typeof obj !== 'object' || Array.isArray(obj)) {\n      return;\n    }\n\n    Object.keys(obj).forEach((key) => {\n      src = target[key]; // source value\n      val = obj[key]; // new value\n\n      // recursion prevention\n      if (val === target) {\n        return;\n\n        /**\n         * if new value isn't object then just overwrite by new value\n         * instead of extending.\n         */\n      } else if (typeof val !== 'object' || val === null) {\n        target[key] = val;\n        return;\n\n        // just clone arrays (and recursive clone objects inside)\n      } else if (Array.isArray(val)) {\n        target[key] = cloneDeep(val);\n        return;\n\n        // overwrite by new value if source isn't object or array\n      } else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n        target[key] = deepExtend({}, val);\n        return;\n\n        // source value and new value is objects both, extending...\n      } else {\n        target[key] = deepExtend(src, val);\n        return;\n      }\n    });\n  });\n\n  return target;\n};\n\nexport type JsonTreeEvent = 'add' | 'edit' | 'delete' | 'sort' | 'clean';\n\nexport declare type JsonPrimitive = string | number | boolean | null;\nexport declare type JsonValue = JsonPrimitive | JsonArray | JsonObject | undefined;\n\nexport interface JsonArray extends Array<JsonValue> {\n}\n\nexport interface JsonObject {\n  [key: string]: JsonValue;\n}\n","export type JsonValueType = 'bigint' | 'number' | 'string' | 'object' | 'boolean' | 'function' | 'symbol' | 'undefined';\n\nexport class JsonTreeNode {\n  id: string;\n  key: string;\n  prevKey: string;\n  value: any;\n  prevValue: any;\n  level: number;\n  type: JsonValueType;\n  isArray: boolean;\n  parent: JsonTreeNode;\n  children: JsonTreeNode[];\n  showChildren: boolean;\n  edit: boolean = false;\n  showEditPanel: boolean = false;\n  error: boolean = false;\n  isNew: boolean = false;\n\n  constructor(\n    key: string,\n    value: any,\n    type: JsonValueType,\n    level?: number,\n    isArray?: boolean,\n    parent?: JsonTreeNode,\n    children?: JsonTreeNode[],\n    showChildren?: boolean,\n  ) {\n    this.id = `${Math.random().toString(36).substr(2, 9)}`;\n    this.key = this.prevKey = key;\n    this.value = this.prevValue = value;\n    this.type = type;\n    this.level = level ?? 0;\n    this.isArray = isArray ?? false;\n    this.parent = parent;\n    this.children = children ?? [];\n    this.showChildren = showChildren ?? false;\n  }\n\n  toggleShowChildren(allLevels: boolean = false) {\n    this.showChildren = !this.showChildren;\n    if (allLevels) {\n      const processAllLevels = (parent: JsonTreeNode) => {\n        for (const child of parent.children) {\n          child.showChildren = parent.showChildren;\n          processAllLevels(child);\n        }\n      };\n      processAllLevels(this);\n    }\n  }\n\n  checkNotUniqueKey(): boolean {\n    return (this.key === '' || (this.parent\n      && this.parent.children.filter(c => c.id !== this.id && c.key === this.key).length > 0))\n      && (this.error = true)\n      && (setTimeout(() => this.error = false, 2000) !== null);\n  }\n\n  toggleEdit() {\n    this.edit = !this.edit;\n  }\n\n  addChild(child: JsonTreeNode) {\n    this.children.push(child);\n  }\n\n  canAppear(): boolean {\n    return this.canAppearCheck(this);\n  }\n\n  private canAppearCheck(child: JsonTreeNode) {\n    if (!child.parent) return true;\n    return child.parent.showChildren && this.canAppearCheck(child.parent);\n  }\n\n  get isComplex(): boolean {\n    return this.type === 'object';\n  }\n\n  isKeyEditable() {\n    return !this.parent?.isArray;\n  }\n\n  resetState() {\n    this.key = this.prevKey;\n    this.value = this.prevValue;\n  }\n\n  updateState() {\n    this.prevKey = this.key;\n    this.prevValue = this.value;\n  }\n\n  delete() {\n    const parentIndex = this.parent.children.findIndex((node) => node.id === this.id);\n    this.parent.children.splice(parentIndex, 1);\n    if (this.parent.isArray) {\n      for (let i = parentIndex; i < this.parent.children.length; i++) {\n        this.parent.children[i].key = `${parseInt(this.parent.children[i].key, 10) - 1}`;\n      }\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'sanitizeHtml'\n})\nexport class SanitizeHtmlPipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) {\n  }\n\n  transform(html: string): unknown {\n    return this.sanitizer.bypassSecurityTrustHtml(html);\n  }\n\n}\n","import { Component, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { JsonTreeNode } from '../../../lib/json-tree-node';\nimport { JsonTreeEvent } from '../../../lib/helpers';\nimport { Icons, Settings } from '../../../lib/settings';\n\n@Component({\n  selector: '[ngx-json-table-key]',\n  templateUrl: './key.component.html',\n  styleUrls: ['./key.component.scss']\n})\nexport class NgxJsonTableKeyComponent {\n\n  @Input() item: JsonTreeNode;\n  @Input() settings: Settings;\n  @Input() icons: Icons;\n  @Output() onChange = new EventEmitter<JsonTreeEvent>();\n\n  constructor() {\n  }\n\n  @HostListener('keyup.escape')\n  onEscapeKeyListener() {\n    this.item.resetState();\n    this.item.edit && this.item.toggleEdit();\n    if (this.item.isNew) {\n      this.item.delete();\n      this.onChange.emit('clean');\n    }\n  }\n\n  @HostListener('keyup.enter')\n  onEnterKeyListener() {\n    if (this.item.checkNotUniqueKey()) return;\n    this.item.toggleEdit();\n    this.item.updateState();\n    this.item.isNew = false;\n    this.onChange.emit('edit');\n  }\n\n  addChild(isObject: boolean = false, isArray: boolean = false) {\n    this.item.showChildren = true;\n    const node = new JsonTreeNode(this.item.isArray ? '0' : '', '',\n      isObject ? 'object' : 'string', this.item.level + 1, isArray, this.item);\n    node.isNew = true;\n    node.edit = true;\n    if (this.item.isArray) {\n      for (const child of this.item.children) {\n        child.key = `${parseInt(child.key, 10) + 1}`;\n      }\n    }\n    this.item.children.splice(0, 0, node);\n    this.onChange.emit('add');\n  }\n\n  toggleDropdownMenu(dropdown: HTMLSpanElement) {\n    const value = dropdown.style.display;\n    dropdown.style.display = value === 'none' || value === '' ? 'block' : 'none';\n  }\n}\n","<span [style]=\"{'margin-left': 20 * item.level + 'px'}\">\n  <span *ngIf=\"!item.isComplex\"\n        [innerHTML]=\"icons.simpleChild.html | sanitizeHtml\"></span>\n  <span *ngIf=\"item.isComplex\"\n        [innerHTML]=\"icons[item.showChildren ? 'collapse' : 'expand'].html | sanitizeHtml\"></span>\n  <span *ngIf=\"(!item.isNew && !settings.options.edit.key) || !item.edit || !item.isKeyEditable()\"\n        [ngStyle]=\"{cursor: item.isComplex ? 'pointer' : ''}\"\n        (click)=\"item.isComplex && item.toggleShowChildren($event['ctrlKey'])\" class=\"row-key-value\">{{item.key}}\n    <span style=\"color: darkgray\" *ngIf=\"item.isComplex\">\n      {{(item.isArray ? '[' : '{') + item.children.length + (item.isArray ? ']' : '}')}}\n    </span>\n  </span>\n  <span *ngIf=\"(item.isNew || settings.options.edit.key) && item.edit && item.isKeyEditable()\">\n    <input [value]=\"item.key\" #keyInput\n           [ngStyle]=\"{'border-color': item.error ? 'red' : ''}\"\n           (keyup)=\"item.key = keyInput.value.trim()\"/>\n  </span>\n  <span *ngIf=\"!item.edit && item.showEditPanel\" class=\"float-right\">\n    <span *ngIf=\"item.isComplex && settings.options.add\" (click)=\"toggleDropdownMenu(dropdown)\"\n          [innerHTML]=\"icons.addChild.html | sanitizeHtml\"></span>\n    <span class=\"dropdown-content\" #dropdown>\n      <span (click)=\"addChild()\">Value</span><br>\n      <span (click)=\"addChild(true)\">Object</span><br>\n      <span (click)=\"addChild(true, true)\">Array</span>\n    </span>\n    <span *ngIf=\"settings.options.edit.key || settings.options.edit.value\"\n          (click)=\"((item.isKeyEditable() && settings.options.edit.key) || settings.options.edit.value) && item.toggleEdit()\"\n          [innerHTML]=\"icons.editChild.html | sanitizeHtml\"></span>\n    <span *ngIf=\"settings.options.delete\"\n          (click)=\"item.delete();onChange.emit('delete')\"\n          [innerHTML]=\"icons.deleteChild.html | sanitizeHtml\"></span>\n  </span>\n  <span *ngIf=\"item.edit\" class=\"float-right\">\n    <span (click)=\"onEnterKeyListener()\"\n          [innerHTML]=\"icons.confirmEditChild.html | sanitizeHtml\"></span>\n    <span (click)=\"onEscapeKeyListener()\"\n          [innerHTML]=\"icons.cancelEditChild.html | sanitizeHtml\"></span>\n  </span>\n</span>\n","import { Component, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { JsonTreeNode } from '../../../lib/json-tree-node';\nimport { JsonTreeEvent } from '../../../lib/helpers';\nimport { Settings } from '../../../lib/settings';\n\n@Component({\n  selector: '[ngx-json-table-value]',\n  templateUrl: './value.component.html',\n  styleUrls: ['./value.component.scss']\n})\nexport class NgxJsonTableValueComponent {\n\n  @Input() item: JsonTreeNode;\n  @Input() settings: Settings;\n  @Output() onChange = new EventEmitter<JsonTreeEvent>();\n\n  constructor() {\n  }\n\n  @HostListener('keyup.escape')\n  onEscapeKeyListener() {\n    this.item.resetState();\n    this.item.edit && this.item.toggleEdit();\n    if (this.item.isNew) {\n      this.item.delete();\n      this.onChange.emit('clean');\n    }\n  }\n\n  @HostListener('keyup.enter')\n  onEnterKeyListener() {\n    if (this.item.checkNotUniqueKey()) return;\n    this.item.toggleEdit();\n    this.item.updateState();\n    this.onChange.emit('edit');\n  }\n}\n","<span *ngIf=\"(!item.isNew && !settings.options.edit.value) || !item.edit || item.isComplex\">{{item.value}}</span>\n<span *ngIf=\"(item.isNew || settings.options.edit.value) && item.edit && !item.isComplex\" class=\"edit-input\">\n  <textarea [value]=\"item.value\" #valueInput\n            (keyup)=\"item.value = valueInput.value\"></textarea>\n</span>\n","import { Component, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { JsonTreeNode } from '../../../lib/json-tree-node';\nimport { JsonTreeEvent } from '../../../lib/helpers';\nimport { Icons, Settings } from '../../../lib/settings';\n\n@Component({\n  selector: '[ngx-json-table-trow]',\n  templateUrl: './trow.component.html',\n  styleUrls: ['./trow.component.scss']\n})\nexport class NgxJsonTableTrowComponent {\n\n  @Input() item: JsonTreeNode;\n  @Input() settings: Settings;\n  @Input() icons: Icons;\n  @Output() onChange = new EventEmitter<JsonTreeEvent>();\n\n  constructor() {\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnterListener() {\n    this.item.showEditPanel = true;\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeaveListener() {\n    this.item.showEditPanel = false;\n  }\n\n}\n","<td ngx-json-table-key [style]=\"{width: settings.key.width}\"\n    [item]=\"item\"\n    [settings]=\"settings\"\n    [icons]=\"icons\"\n    (onChange)=\"onChange.emit($event)\">\n</td>\n<td ngx-json-table-value\n    [style]=\"{width: settings.value.width}\"\n    [item]=\"item\" class=\"row-value\"\n    [settings]=\"settings\"\n    (onChange)=\"onChange.emit($event)\">\n</td>\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { JsonTreeNode } from '../../lib/json-tree-node';\nimport { Icons, Settings, SortType } from '../../lib/settings';\nimport { JsonTreeEvent, JsonValue } from '../../lib/helpers';\nimport { NgxJsonTableTheadComponent } from '../thead/thead.component';\n\n@Component({\n  selector: '[ngx-json-table-tbody]',\n  templateUrl: './tbody.component.html',\n  styleUrls: ['./tbody.component.scss']\n})\nexport class NgxJsonTableTbodyComponent implements OnChanges {\n\n  @Input() data: JsonValue = {};\n  @Input() head: NgxJsonTableTheadComponent;\n  @Input() settings: Settings;\n  @Input() icons: Icons;\n  @Output() dataChange = new EventEmitter<any>();\n\n  currentData: JsonValue = {};\n  jsonTree: JsonTreeNode = new JsonTreeNode('root', '', 'object', -1, false, null, [], true);\n  table: JsonTreeNode[] = [];\n\n  constructor() {\n  }\n\n  ngOnChanges({data, settings, icons}: SimpleChanges): void {\n    if (data && this.currentData !== this.data) {\n      this.data = this.data ?? {};\n      this.currentData = this.data;\n      this.rebuildJsonTree();\n      this.rebuildTable();\n      !data.isFirstChange() && this.dataChange.next(this.data);\n      this.head.root = this.jsonTree;\n    }\n  }\n\n  rebuildJsonTree() {\n    this.jsonTree.children = [];\n    this.buildJsonTree(this.jsonTree, this.data);\n    this.settings.sortDirection && this.sortJsonTree(this.jsonTree, this.settings.sortDirection);\n  }\n\n  rebuildTable() {\n    this.table = [];\n    this.buildTable(this.jsonTree);\n  }\n\n  buildJsonTree(root: JsonTreeNode, object: JsonValue, level: number = 0) {\n    root.isArray = Array.isArray(object);\n    const keys = Object.keys(object);\n    for (const key of keys) {\n      const value = object[key];\n      const node = new JsonTreeNode(key, typeof value !== 'object' ? value : '',\n        value !== null ? typeof value : 'undefined', level, false, root, [], this.settings.expandAll);\n      root.addChild(node);\n      value !== null && typeof value === 'object' && this.buildJsonTree(node, value, level + 1);\n    }\n  }\n\n  sortJsonTree(root: JsonTreeNode, sortDirection: SortType = 'asc') {\n    root.children.sort((a, b) => a.key.localeCompare(b.key));\n    sortDirection === 'desc' && root.children.reverse();\n    for (const node of root.children) {\n      this.sortJsonTree(node, sortDirection);\n    }\n  }\n\n  buildTable(root: JsonTreeNode) {\n    root.level > -1 && this.table.push(root);\n    for (const node of root.children) {\n      this.buildTable(node);\n    }\n  }\n\n  jsonTreeToObject(root: JsonTreeNode): JsonValue {\n    let result: any;\n    if (root.isComplex) {\n      result = root.isArray ? [] : {};\n      for (const node of root.children) {\n        result[node.key] = this.jsonTreeToObject(node);\n      }\n    } else {\n      const value = `${root.value}`;\n      if (`${parseFloat(value)}` === value) {\n        result = parseFloat(value);\n      } else if (['true', 'false'].includes(value.toLowerCase())) {\n        result = value === 'true';\n      } else {\n        result = value;\n      }\n    }\n    return result;\n  }\n\n  toggleSortDirection(sortDirection) {\n    this.sortJsonTree(this.jsonTree, sortDirection);\n    this.somethingChanged('sort');\n  }\n\n  somethingChanged(event: JsonTreeEvent) {\n    switch (event) {\n      case 'add':\n        this.rebuildTable();\n        this.currentData = this.jsonTreeToObject(this.jsonTree);\n        break;\n      case 'sort':\n      case 'delete':\n        this.rebuildTable();\n        this.currentData = this.jsonTreeToObject(this.jsonTree);\n        this.dataChange.next(this.currentData);\n        break;\n      case 'edit':\n        this.currentData = this.jsonTreeToObject(this.jsonTree);\n        this.dataChange.next(this.currentData);\n        break;\n      case 'clean':\n        this.rebuildTable();\n        break;\n    }\n  }\n}\n","<ng-container *ngFor=\"let item of table;\">\n  <tr ngx-json-table-trow\n      [item]=\"item\"\n      [settings]=\"settings\"\n      [icons]=\"icons\"\n      (onChange)=\"somethingChanged($event)\"\n      *ngIf=\"item.canAppear()\">\n  </tr>\n</ng-container>\n<tr *ngIf=\"!table || table.length === 0\">\n  <td colspan=\"2\">\n    No data Found\n  </td>\n</tr>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Icons, Settings, SortType } from '../../lib/settings';\nimport { JsonTreeNode } from '../../lib/json-tree-node';\nimport { JsonTreeEvent } from '../../lib/helpers';\n\n@Component({\n  selector: '[ngx-json-table-thead]',\n  templateUrl: './thead.component.html',\n  styleUrls: ['./thead.component.scss']\n})\nexport class NgxJsonTableTheadComponent {\n\n  @Input() root: JsonTreeNode;\n  @Input() settings: Settings;\n  @Input() icons: Icons;\n  @Output() onChange = new EventEmitter<JsonTreeEvent>();\n  @Output() fileLoaded = new EventEmitter<any>();\n  @Output() onSortDirectionChange = new EventEmitter<SortType>();\n\n  constructor() {\n  }\n\n  toggleSortDirection() {\n    this.settings.sortDirection = this.settings.sortDirection === 'asc' ? 'desc' : 'asc';\n    this.onSortDirectionChange.emit(this.settings.sortDirection);\n  }\n\n  toggleDropdownMenu(dropdown: HTMLSpanElement) {\n    const value = dropdown.style.display;\n    dropdown.style.display = value === 'none' || value === '' ? 'block' : 'none';\n  }\n\n  addChild(dropdown: HTMLSpanElement, isObject: boolean = false, isArray: boolean = false) {\n    dropdown.style.display = 'none';\n    const node = new JsonTreeNode('', '', isObject ? 'object' : 'string', 0, isArray, this.root);\n    node.edit = true;\n    node.isNew = true;\n    this.root.children.splice(0, 0, node);\n    this.onChange.emit('add');\n  }\n\n  loadFile(event) {\n    const [file] = event.target.files;\n    if (file && file.type === 'application/json') {\n      const fileReader = new FileReader();\n      fileReader.readAsText(file);\n      fileReader.onload = () => {\n        const object = JSON.parse(fileReader.result as string);\n        this.fileLoaded.emit(object);\n      };\n    }\n  }\n}\n","<tr>\n  <th [ngStyle]=\"{width: settings.key.width}\">\n    {{settings.key.headerText}}\n    <span class=\"float-right\" *ngIf=\"settings.sortable\"\n          (click)=\"toggleSortDirection()\" style=\"cursor: pointer; padding-left: 5px\">\n      <span *ngIf=\"!settings.sortDirection\" [innerHTML]=\"icons.notSorted.html | sanitizeHtml\">\n      </span>\n      <span *ngIf=\"settings.sortDirection\"\n            [innerHTML]=\"icons[settings.sortDirection === 'asc' ? 'sortedAsc' : 'sortedDesc'].html | sanitizeHtml\">\n      </span>\n    </span>\n    <span *ngIf=\"settings.options.add\" class=\"float-right\">\n      <span (click)=\"toggleDropdownMenu(dropdown)\"\n            [innerHTML]=\"icons.addChild.html | sanitizeHtml\"></span>\n      <span class=\"dropdown-content\" #dropdown>\n        <span (click)=\"addChild(dropdown)\">Value</span><br>\n        <span (click)=\"addChild(dropdown, true)\">Object</span><br>\n        <span (click)=\"addChild(dropdown, true, true)\">Array</span>\n      </span>\n    </span>\n  </th>\n  <th [ngStyle]=\"{width: settings.value.width}\">\n    {{settings.value.headerText}}\n    <label class=\"float-right\" for=\"upload\" style=\"margin-bottom: 0\">\n      <span *ngIf=\"settings.loadFromFile\"\n          [innerHTML]=\"icons.uploadFile.html | sanitizeHtml\"></span>\n      <input type=\"file\" id=\"upload\" style=\"display:none\"\n             (change)=\"loadFile($event)\" accept=\"application/json\">\n    </label>\n  </th>\n</tr>\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { Icons, iconsPackages, Settings } from './lib/settings';\nimport { deepExtend } from './lib/helpers';\n\n@Component({\n  selector: 'ngx-json-table',\n  templateUrl: './ngx-json-table.component.html',\n  styleUrls: ['./ngx-json-table.component.scss'],\n})\nexport class NgxJsonTableComponent implements OnChanges {\n\n  @Input() data: any;\n  @Input() settings: Settings;\n  @Output() dataChange = new EventEmitter<any>();\n\n  defaultSettings: Settings = {\n    key: {\n      headerText: 'Key',\n      width: '40%',\n    },\n    value: {\n      headerText: 'Value',\n      width: '60%'\n    },\n    options: {\n      add: false,\n      edit: {\n        key: false,\n        value: false\n      },\n      delete: false\n    },\n    sortable: false,\n    sortDirection: undefined,\n    expandAll: false,\n    loadFromFile: false\n  };\n\n  constructor() {\n    this.defaultSettings.icons = iconsPackages.basic;\n    this.buildIcons(this.defaultSettings.icons);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.settings) {\n      this.defaultSettings.icons = iconsPackages[this.settings?.iconPackage ?? 'basic'];\n      this.defaultSettings = deepExtend({}, this.defaultSettings, this.settings);\n      this.buildIcons(this.defaultSettings.icons as Icons);\n    }\n  }\n\n  buildIcons(icons: Icons) {\n    for (const [, value] of Object.entries(icons)) {\n      value.class = value.class ?? '';\n      value.innerText = value.innerText ?? '';\n      value.color = value.color ?? 'inherit';\n      value.html = value.html ?? `<i class=\"ngx-json-table-icon ${value.class}\" style=\"color: ${value.color}\">${value.innerText}</i>`;\n    }\n  }\n}\n","<table>\n  <thead ngx-json-table-thead #thead\n         [settings]=\"defaultSettings\"\n         [icons]=\"defaultSettings.icons\"\n         (onChange)=\"tbody.somethingChanged($event)\"\n         (fileLoaded)=\"data = $event\"\n         (onSortDirectionChange)=\"tbody.toggleSortDirection($event)\">\n  </thead>\n  <tbody ngx-json-table-tbody #tbody\n         [head]=\"thead\"\n         [data]=\"data\"\n         (dataChange)=\"dataChange.emit($event)\"\n         [settings]=\"defaultSettings\"\n         [icons]=\"defaultSettings.icons\">\n  </tbody>\n</table>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NgxJsonTableComponent } from './ngx-json-table.component';\nimport { SanitizeHtmlPipe } from './pipes/sanitize-html.pipe';\nimport { NgxJsonTableTbodyComponent } from './components/tbody/tbody.component';\nimport { NgxJsonTableTrowComponent } from './components/tbody/trow/trow.component';\nimport { NgxJsonTableKeyComponent } from './components/tbody/key/key.component';\nimport { NgxJsonTableValueComponent } from './components/tbody/value/value.component';\nimport { NgxJsonTableTheadComponent } from './components/thead/thead.component';\n\nconst COMPONENTS = [\n  NgxJsonTableTbodyComponent,\n  NgxJsonTableTrowComponent,\n  NgxJsonTableKeyComponent,\n  NgxJsonTableValueComponent,\n  NgxJsonTableTheadComponent,\n  NgxJsonTableComponent,\n  SanitizeHtmlPipe\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [...COMPONENTS],\n  exports: [...COMPONENTS],\n})\nexport class NgxJsonTableModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2.SanitizeHtmlPipe","i1.NgxJsonTableKeyComponent","i2.NgxJsonTableValueComponent","i2.NgxJsonTableTrowComponent","i1.NgxJsonTableTbodyComponent","i2.NgxJsonTableTheadComponent"],"mappings":"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"}